name: PR tests
on:
  pull_request:
    paths:
        - 'tabular_orchestrated/**'
        - 'tests/**'
        - '.github/workflows/ci.yml'
        - 'pyproject.toml'
        - 'uv.lock'
  workflow_dispatch:
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.9', '3.10',  ]
    steps:
      - uses: actions/checkout@v4
      - name: Install OS Dependencies
        if: matrix.os == 'macos-latest'
        run: brew install libomp
      - uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      - run: uv python install ${{ matrix.python-version }}
      - run: make
      - run: make test
    continue-on-error: true
  tests-imports:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extra: [ 'mljar','spliter','deepchecks','editor']
    steps:
      - uses: actions/checkout@v4
      - name: Install OS Dependencies
        if: matrix.os == 'macos-latest'
        run: brew install libomp
      - uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      - run: uv python install 3.10
      - run: uv sync --extra ${{ matrix.extra }} --frozen
      - run: uv run pytest tests/imports_checks/test_${{ matrix.extra }}_imports.py
#      - name: test-mljar
#        if: matrix.extra == 'mljar'
#        run: uv run pytest tests/comp/mljar
    continue-on-error: true
