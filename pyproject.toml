[tool.poetry]
name = "tabular-orchestrated"
version = "0.0.0"
description = ""
authors = ["DanielAvdar <66269169+DanielAvdar@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
keywords = [
    "python"
]
packages = [{ include = "tabular_orchestrated", from = "." }]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
ml-orchestrator = ">=0.0.5b0"
pandas-pyarrow = "0.1.8"
kfp = { version = "2.7.0", optional = true }
google-cloud-aiplatform = { version = "*", optional = true }
scikit-learn = { version = ">=1.3.0", optional = true }
mljar-supervised = { version = "1.1.9", optional = true }
eh-tabular-deepchecks = { version = "*", optional = true }



[tool.poetry.dev-dependencies]
debugpy = "1.8.5"
matplotlib = { version = "<3.9.3",  optional = true,platform = "win32" }
ml-orchestrator = { version = "*", extras = ["editor"] }
google-cloud-aiplatform = "*"
pytest = ">= 7.1.2"
hypothesis = ">= 6.23.3"
pre-commit = ">= 2.20.0"
pytest-cov = ">= 4.0.0"
mypy = "1.11.2"
pytest-parametrization = "^2022"
ruff = "^0.6.3"
pandas-stubs = "*"
#matplotlib = { version = "*", marker = "sys_platform != 'win32'" }



[tool.poetry.extras]
editor = ["kfp", ]
gcp = ["google-cloud-aiplatform"]
spliter = ["scikit-learn"]
mljar = ["mljar-supervised"]
deepchecks = ["eh-tabular-deepchecks"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
include = ["pyproject.toml", "tests/**", "tabular_orchestrated/**", "tabular_kfp/**"]

[tool.ruff.lint]
select = ["F", "B", "I", "F", "W", "E", "A", "N"]

fixable = ["ALL"]

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = ["future", "standard-library", "first-party", "local-folder", "third-party"]
[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = false
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tabular_kfp.*"
ignore_errors = true
