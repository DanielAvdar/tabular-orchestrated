#[tool.poetry]
#name = "tabular-orchestrated"
#version = "0.0.0"
#description = ""
#authors = ["DanielAvdar <66269169+DanielAvdar@users.noreply.github.com>"]
#license = "MIT"
#readme = "README.md"
#keywords = [
#    "python"
#]
#packages = [
#    { include = "tabular_orchestrated", from = "." },
#    { include = "tabular_orchestrated_kfp", from = "." }
#]

#[tool.poetry.dependencies]
#python = ">=3.9,<3.12"
##ml-orchestrator = ">=0.0.5b0"
##pandas-pyarrow = "0.1.9"
#kfp = { version = ">=2", optional = true }
#ml-orchestrator = { version = ">=0.0.5b0", optional = true }
#pandas-pyarrow = { version = ">=0.1.9", optional = true }
#google-cloud-aiplatform = { version = "*", optional = true }
#scikit-learn = { version = ">=1.3.0", optional = true }
#mljar-supervised = { version = "1.1.14", optional = true }
#eh-tabular-deepchecks = { version = "*", optional = true }
#


#[tool.poetry.dev-dependencies]
#debugpy = "1.8.10"
#matplotlib = { version = "<3.9.4",  optional = true,platform = "win32" }
#ml-orchestrator = { version = "*", extras = ["editor"] }
#google-cloud-aiplatform = "*"
#pytest = ">= 7.1.2"
#hypothesis = ">= 6.23.3"
#pre-commit = ">= 2.20.0"
#pytest-cov = ">= 4.0.0"
#mypy = "1.13.0"
#pytest-parametrization = "^2022"
#ruff = "^0.8.2"
#pandas-stubs = "*"
##matplotlib = { version = "*", marker = "sys_platform != 'win32'" }
#

#
#[tool.poetry.extras]
#editor = ["kfp", ]
#gcp = ["google-cloud-aiplatform", "ml-orchestrator", "pandas-pyarrow"]
#spliter = ["scikit-learn", "ml-orchestrator", "pandas-pyarrow"]
#mljar = ["mljar-supervised", "ml-orchestrator", "pandas-pyarrow"]
#deepchecks = ["eh-tabular-deepchecks", "ml-orchestrator", "pandas-pyarrow"]
#

[tool.pdm.dev-dependencies]
dev = [
    "debugpy==1.8.10",
    "matplotlib<3.9.4",
    "ml-orchestrator[editor]",
    "google-cloud-aiplatform",
    "pytest>=7.1.2",
#    "hypothesis>=6.23.3",
    "pre-commit>=2.20.0",
    "pre-commit-uv>=4",
    "pytest-cov>=4.0.0",
    "mypy==1.13.0",
    "pytest-parametrization<2023,>=2022",
    "ruff<1.0.0,>=0.8.2",
    "pandas-stubs",
]

[tool.pdm.build]
includes = ["tabular_orchestrated", "tabular_orchestrated_kfp"]
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.ruff]
line-length = 120
include = ["pyproject.toml", "tests/**", "tabular_orchestrated/**", "tabular_kfp/**", "tabular_orchestrated_kfp/**"]

[tool.ruff.lint]
select = ["F", "B", "I", "F", "W", "E", "A", "N"]

fixable = ["ALL"]

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = ["future", "standard-library", "first-party", "local-folder", "third-party"]
[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = false
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tabular_kfp.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tabular_orchestrated_kfp.*"
ignore_errors = true

[project]
authors = [
    {name = "DanielAvdar", email = "66269169+DanielAvdar@users.noreply.github.com"},
]
license = {text = "MIT"}
requires-python = "<3.12,>=3.9"
dependencies = [
    "setuptools>=75.6.0",
]
name = "tabular-orchestrated"
version = "0.0.0"
description = ""
readme = "README.md"
keywords = [
    "python",
]

[project.optional-dependencies]
editor = [
    "kfp>=2",
]
gcp = [
    "ml-orchestrator>=0.0.5b0",
    "pandas-pyarrow>=0.1.9",
    "google-cloud-aiplatform",
]
spliter = [
    "scikit-learn>=1.3.0",
]
mljar = [
    "mljar-supervised==1.1.14",
]
deepchecks = [
    "eh-tabular-deepchecks",
]

[dependency-groups]
dev = [
    "debugpy==1.8.10",
    "matplotlib<3.9.4",
    "ml-orchestrator[editor]",
    "google-cloud-aiplatform",
    "pytest>=7.1.2",
    "hypothesis>=6.23.3",
    "pre-commit>=2.20.0",
    "pre-commit-uv>=4",
    "pytest-cov>=4.0.0",
    "mypy==1.13.0",
    "pytest-parametrization<2023,>=2022",
    "ruff<1.0.0,>=0.8.2",
    "pandas-stubs",
]
